require 'rubygems'
require 'pathname'
require 'rake'
require 'bundler'
Bundler::GemHelper.install_tasks

require 'uglifier'
require 'sprockets'
require 'haml'

require 'compass'

ROOT = Pathname(__FILE__).dirname
COMPILED_PATHS = {
                   # TODO: Here we need configurable params
                   :img => ROOT.join('images/'),
                   :js => ROOT.join('javascripts/'),
                   :html => ROOT,
                   :css => ROOT.join('stylesheets/')
                 }

ASSETS_ROOT = ROOT.join('assets/')
TEMPLATE_PATHS = {
                   :coffee => ASSETS_ROOT.join('coffee/'),
                   :templates => ASSETS_ROOT.join('templates/'),
                   :layout => ASSETS_ROOT.join('templates/layout/'),
                   :sass => ASSETS_ROOT.join('sass/'),
                   :images => ASSETS_ROOT.join('images/')
                 }

Compass.configuration.images_path = TEMPLATE_PATHS['images']

class AssetBuilder

  def initialize(env)
    @env = env
  end

  def assets
    @sprockets ||= begin
      Sprockets::Environment.new(ROOT) do |env|
        TEMPLATE_PATHS.values.each { |it| env.append_path it }

        compass = Gem.loaded_specs['compass'].full_gem_path
        env.append_path("#{compass}/frameworks/compass/stylesheets")

        if @env == :production
          env.js_compressor = Uglifier.new(copyright: false)
        end
      end
    end
  end

  def render(haml, &block)
    options = { format: :html5 }
    options[:ugly] = true if @env == :production
    Haml::Engine.new(haml, options).render(self, &block)
  end

  def production?
    @env == :production
  end

end

environment = nil

desc 'Build all assets'
task :build do |t, args|
  environment ||= :production

  puts 'building asset files'

  layout = File.new(File.join(TEMPLATES_LAYOUT, 'layout.html.haml')).read

  helper = Helper.new(environment)

  Dir.glob(File.join(TEMPLATES_PATHS['templates']), '*').each do |template|
    next if File.basename(template) =~ /^layout\./

    path = File.



end



### Rake tasks ###

desc 'Run all tests by default'
task :default do
  system("rspec spec")
end

